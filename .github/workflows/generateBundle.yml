# This is a basic workflow to help you get started with Actions

name: generateBundle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  assemble:
    strategy:
        matrix:
          flavor: [doctor, patient]
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            
      - id: string
        uses: ASzc/change-string-case-action@v1
        with:
          string: ${{matrix.flavor}}
          
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
          
      - name: assembleDebug
        uses: vgaidarji/android-github-actions-build@v1.0.1
        with:
          args: "./gradlew assemble${{ steps.string.outputs.capitalized }}Debug"

      - name: Upload Debug apk
        uses: zkqiang/tencent-cos-action@v0.1.0
        with:
          args: delete -f /apk/${{matrix.flavor}}-debug-${{ steps.extract_branch.outputs.branch }}.apk && upload ./app/build/outputs/apk/${{matrix.flavor}}/debug/app-${{matrix.flavor}}-debug.apk /apk/${{matrix.flavor}}-debug-${{ steps.extract_branch.outputs.branch }}.apk
          secret_id: ${{ secrets.SECRET_ID }}
          secret_key: ${{ secrets.SECRET_KEY }}
          bucket: ${{ secrets.BUCKET }}
          region: ap-shanghai

      - name: Echo cos address
        shell: bash
        run: echo "##[Download address]$(echo https://se-cos.borealin.cn/apk/${{matrix.flavor}}-debug-${{ steps.extract_branch.outputs.branch }}.apk)"
